#!/usr/bin/env node

const fsExistsSync = require('../lib/fsExistsSync')
const download = require('../lib/download')
const logSymbols = require('log-symbols')
const exec = require('child_process').exec
const program = require("commander")
const chalk = require('chalk')
const glob = require('glob')
const path = require('path')
const ora = require('ora')
const fs = require('fs')

program.usage('<project-name>').parse(process.argv)

let projectName = program.args[0]

if (!projectName) {
    program.help()
    return
}

if (!fsExistsSync(projectName)) {
    fs.mkdirSync(projectName)
} else {
    console.log(logSymbols.error, chalk.red('项目文件夹存在'))
    return
}


download(projectName)
    .then(target => {
        const loading = ora('npm install...')
        loading.start()
        const child = exec('npm install', { cwd: projectName }, function (err, stdout, stderr) {
            if (err) {
                loading.fail()
                console.log(logSymbols.error, chalk.red(`npm安装失败: ${err}`))
            }
            loading.succeed()
            console.log(logSymbols.success, chalk.green('创建成功:)'))
            console.log(
            chalk.green(`
                cd ${projectName}
                npm run dev     (启动dev服务)
                npm run build   (打包项目)
                npm test        (运行测试)
            `
            ))
        })
    })
    .catch(err => console.log(logSymbols.error, chalk.red(`创建失败: ${err}`)))